// <auto-generated />
using System;
using BrazosApp.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrazosApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240502104808_AddNotesTableToDb")]
    partial class AddNotesTableToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BrazosApp.Models.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApplicationForId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasComment("1='Not Verified', 2='Verified', 3='Expired'");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationForId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("BrazosApp.Models.ApplicationFor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ApplicationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("LanguageTypeId");

                    b.ToTable("ApplicationFor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationTypeId = 1,
                            Code = "RF",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Retail Food New",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationTypeId = 1,
                            Code = "RF",
                            IsActive = true,
                            LanguageTypeId = 2,
                            Name = "Retail Food New (Spanish)",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationTypeId = 1,
                            Code = "MF",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Mobile Food New",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationTypeId = 1,
                            Code = "MF",
                            IsActive = true,
                            LanguageTypeId = 2,
                            Name = "Mobile Food New (Spanish)",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationTypeId = 1,
                            Code = "RF",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Retail Food Change of Owner",
                            Purpose = "OwnerChange"
                        },
                        new
                        {
                            Id = 6,
                            ApplicationTypeId = 1,
                            Code = "RF",
                            IsActive = true,
                            LanguageTypeId = 2,
                            Name = "Retail Food Change of Owner (Spanish)",
                            Purpose = "OwnerChange"
                        },
                        new
                        {
                            Id = 7,
                            ApplicationTypeId = 1,
                            Code = "MF",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Mobile Food Change of Owner",
                            Purpose = "OwnerChange"
                        },
                        new
                        {
                            Id = 8,
                            ApplicationTypeId = 1,
                            Code = "MF",
                            IsActive = true,
                            LanguageTypeId = 2,
                            Name = "Mobile Food Change of Owner (Spanish)",
                            Purpose = "OwnerChange"
                        },
                        new
                        {
                            Id = 9,
                            ApplicationTypeId = 1,
                            Code = "TF",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Temporary Food",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 10,
                            ApplicationTypeId = 1,
                            Code = "TF",
                            IsActive = true,
                            LanguageTypeId = 2,
                            Name = "Temporary Food (Spanish)",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 11,
                            ApplicationTypeId = 1,
                            Code = "FHEA",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Food Handler Enrollment Application",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 12,
                            ApplicationTypeId = 1,
                            Code = "FHEA",
                            IsActive = true,
                            LanguageTypeId = 2,
                            Name = "Food Handler Enrollment Application (Spanish)",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 13,
                            ApplicationTypeId = 2,
                            Code = "FH",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Foster Home",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 14,
                            ApplicationTypeId = 3,
                            Code = "DS",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Daycare Sanitation",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 15,
                            ApplicationTypeId = 4,
                            Code = "PL",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Pools",
                            Purpose = "NewPermit"
                        },
                        new
                        {
                            Id = 16,
                            ApplicationTypeId = 5,
                            Code = "C",
                            IsActive = true,
                            LanguageTypeId = 1,
                            Name = "Complaints",
                            Purpose = "Complaint"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.ApplicationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Foster Home"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Daycare Sanitation"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Pools"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Complaints"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.BusinessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "RF",
                            IsActive = true,
                            Name = "Restaurant/food production",
                            SpName = "Restaurante/producción de comida"
                        },
                        new
                        {
                            Id = 2,
                            Code = "RF",
                            IsActive = true,
                            Name = "Establishment with TCS food production",
                            SpName = "Establecimiento con preparación de alimentos o bebidas TCS"
                        },
                        new
                        {
                            Id = 3,
                            Code = "RF",
                            IsActive = true,
                            Name = "Establishment without TCS food production",
                            SpName = "Establecimiento sin preparación de alimentos o bebidas TCS"
                        },
                        new
                        {
                            Id = 4,
                            Code = "RF",
                            IsActive = true,
                            Name = "Bar without TCS ingredients (beverages only)",
                            SpName = "Bar con ingredientes TCS o alimentos"
                        },
                        new
                        {
                            Id = 5,
                            Code = "RF",
                            IsActive = true,
                            Name = "Bar with TCS ingredients and/or food",
                            SpName = "Bar sin ingredientes TCS"
                        },
                        new
                        {
                            Id = 6,
                            Code = "RF",
                            IsActive = true,
                            Name = "Retail with TCS pre-packaged products (no preparation)",
                            SpName = "Venta con productos TCS preenvasados (sin preparación)"
                        },
                        new
                        {
                            Id = 7,
                            Code = "RF",
                            IsActive = true,
                            Name = "Grocery Store",
                            SpName = "Tienda de comida"
                        },
                        new
                        {
                            Id = 8,
                            Code = "RF",
                            IsActive = true,
                            Name = "Long term care facility",
                            SpName = "Centro de cuidados a largo plazo"
                        },
                        new
                        {
                            Id = 9,
                            Code = "RF",
                            IsActive = true,
                            Name = "Hospital",
                            SpName = "Hospital"
                        },
                        new
                        {
                            Id = 10,
                            Code = "RF",
                            IsActive = true,
                            Name = "Farmer’s Market",
                            SpName = "Mercado de agricultores"
                        },
                        new
                        {
                            Id = 11,
                            Code = "RF",
                            IsActive = true,
                            Name = "School",
                            SpName = "Escuela"
                        },
                        new
                        {
                            Id = 12,
                            Code = "RF",
                            IsActive = true,
                            Name = "Daycare",
                            SpName = "Guardería de niños"
                        },
                        new
                        {
                            Id = 13,
                            Code = "RF",
                            IsActive = true,
                            Name = "Central Preparation Facility",
                            SpName = "Instalación central de preparación"
                        },
                        new
                        {
                            Id = 14,
                            Code = "RF",
                            IsActive = true,
                            Name = "Non-profit 501C (must include proof)",
                            SpName = "Sin fines de lucro 501C (debe incluir prueba)"
                        },
                        new
                        {
                            Id = 15,
                            Code = "MF",
                            IsActive = true,
                            Name = "Food Truck with TCS foods",
                            SpName = "Camión de comida con alimentos TCS"
                        },
                        new
                        {
                            Id = 16,
                            Code = "MF",
                            IsActive = true,
                            Name = "Food Truck without TCS foods",
                            SpName = "Camión de comida sin alimentos TCS"
                        },
                        new
                        {
                            Id = 17,
                            Code = "MF",
                            IsActive = true,
                            Name = "Food Pushcart with TCS foods",
                            SpName = "Carrito de comida con alimentos TCS"
                        },
                        new
                        {
                            Id = 18,
                            Code = "MF",
                            IsActive = true,
                            Name = "Food Pushcart without TCS foods",
                            SpName = "Carrito de comida sin alimentos TCS"
                        },
                        new
                        {
                            Id = 19,
                            Code = "MF",
                            IsActive = true,
                            Name = "Roadside Vendor with TCS foods",
                            SpName = "Vendedor ambulante con alimentos TCS"
                        },
                        new
                        {
                            Id = 20,
                            Code = "MF",
                            IsActive = true,
                            Name = "Roadside Vendor without TCS foods",
                            SpName = "Vendedor ambúlate sin alimentos TCS"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DocFileName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("BrazosApp.Models.Establishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApplicantSignDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApplicationForId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OldEstId")
                        .HasColumnType("int");

                    b.Property<int?>("OldPermitStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PermitNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermitStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RiskCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Territory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationForId");

                    b.HasIndex("PermitStatusId");

                    b.ToTable("Establishments");
                });

            modelBuilder.Entity("BrazosApp.Models.EstablishmentOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MailingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("EstablishmentOwners");
                });

            modelBuilder.Entity("BrazosApp.Models.EstablishmentSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstablishmentSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Small"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Large"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.EstablishmentTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FeeCalculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPorated")
                        .HasColumnType("bit");

                    b.Property<int>("JurisdictionId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Q1Fees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q2Fees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q3Fees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Q4Fees")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("JurisdictionId");

                    b.ToTable("EstablishmentTypes");
                });

            modelBuilder.Entity("BrazosApp.Models.FeePrograms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Retail Food"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Mobile Food"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Temporary Food"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Pools"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Foster Care"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Daycare"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "OSSF"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "FHC & L"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Clinic - C4"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Clinic - CHS"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "General"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Other Service"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.JurisdictionAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Jurisdictions");
                });

            modelBuilder.Entity("BrazosApp.Models.LanguageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("LanguageType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "E",
                            IsActive = true,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SP",
                            IsActive = true,
                            Name = "Spanish"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.MFOperationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CentralProcessingFacility")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("CertificateExpirationDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertifiedFoodManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MobileOperationLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Portablewatertanksize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicWaterSouce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteWaterDisposalsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wastewatertanksize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("EstablishmentId");

                    b.HasIndex("OperationTypeId");

                    b.ToTable("MFOperationDetails");
                });

            modelBuilder.Entity("BrazosApp.Models.MFVehicleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Color")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("License")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Make")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Model")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("VIN")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Year")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("MFVehicleInformation");
                });

            modelBuilder.Entity("BrazosApp.Models.Notes", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("NoteId");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("BrazosApp.Models.OperationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "RF",
                            IsActive = true,
                            Name = "Annually (12 months)",
                            SpName = "Anual (12 meses)"
                        },
                        new
                        {
                            Id = 2,
                            Code = "RF",
                            IsActive = true,
                            Name = "Seasonal (4 months)",
                            SpName = "Temporal (4 meses)"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.PermitStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PermitStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Incomplete"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Pending Admin Review"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Admin Review"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Pending Plan Review"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Plan Review"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Pending Payment"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Opening Inspection"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Renewal"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Expired"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            Name = "Area 51"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            Name = "Inactive"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            Name = "Closed"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.RFOperationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CertificateExpirationDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CertifiedFoodManager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstablishmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NumberOfEmployees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PrivateWaterSeptic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicWaterSouce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publicsewage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WithinCityLimitChoice")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("EstablishmentId");

                    b.HasIndex("OperationTypeId");

                    b.ToTable("RFOperationDetails");
                });

            modelBuilder.Entity("BrazosApp.Models.RiskCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RiskCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "L",
                            Description = "Low (1 Routine Inspection in 12 Months From Activation Date",
                            Name = "Low"
                        },
                        new
                        {
                            Id = 2,
                            Code = "M",
                            Description = "Low (1 Routine Inspection in 6 Months From Activation Date",
                            Name = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            Code = "H",
                            Description = "Low (1 Routine Inspection in 4 Months From Activation Date",
                            Name = "High"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Admin Inspector"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Inspector"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "View Only"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.Territory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Territories");
                });

            modelBuilder.Entity("BrazosApp.Models.TerritoryAssignedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TerritoryAssignedTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "System Assigned"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Default Assigned"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Normal Assigned"
                        });
                });

            modelBuilder.Entity("BrazosApp.Models.TerritoryWiseInspectors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("TerritoryId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignedUserId");

                    b.HasIndex("TerritoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("TerritoryWiseInspectors");
                });

            modelBuilder.Entity("BrazosApp.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BHCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertifiedPoolOperator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesignatedRepresentative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoggedIn")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSeenTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RegisteredSanitarian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SanitarianInTrain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BrazosApp.Models.Application", b =>
                {
                    b.HasOne("BrazosApp.Models.ApplicationFor", "ApplicationFor")
                        .WithMany()
                        .HasForeignKey("ApplicationForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationFor");
                });

            modelBuilder.Entity("BrazosApp.Models.ApplicationFor", b =>
                {
                    b.HasOne("BrazosApp.Models.ApplicationType", "ApplicationType")
                        .WithMany()
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.LanguageType", "LanguageType")
                        .WithMany()
                        .HasForeignKey("LanguageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("LanguageType");
                });

            modelBuilder.Entity("BrazosApp.Models.Document", b =>
                {
                    b.HasOne("BrazosApp.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Establishment");
                });

            modelBuilder.Entity("BrazosApp.Models.Establishment", b =>
                {
                    b.HasOne("BrazosApp.Models.ApplicationFor", "ApplicationFor")
                        .WithMany()
                        .HasForeignKey("ApplicationForId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.PermitStatus", "PermitStatus")
                        .WithMany()
                        .HasForeignKey("PermitStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationFor");

                    b.Navigation("PermitStatus");
                });

            modelBuilder.Entity("BrazosApp.Models.EstablishmentOwner", b =>
                {
                    b.HasOne("BrazosApp.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Establishment");
                });

            modelBuilder.Entity("BrazosApp.Models.EstablishmentTypes", b =>
                {
                    b.HasOne("BrazosApp.Models.JurisdictionAccounts", "Jurisdiction")
                        .WithMany()
                        .HasForeignKey("JurisdictionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jurisdiction");
                });

            modelBuilder.Entity("BrazosApp.Models.JurisdictionAccounts", b =>
                {
                    b.HasOne("BrazosApp.Models.FeePrograms", "Programs")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Programs");
                });

            modelBuilder.Entity("BrazosApp.Models.MFOperationDetails", b =>
                {
                    b.HasOne("BrazosApp.Models.BusinessType", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.OperationType", "OperationType")
                        .WithMany()
                        .HasForeignKey("OperationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Establishment");

                    b.Navigation("OperationType");
                });

            modelBuilder.Entity("BrazosApp.Models.MFVehicleInformation", b =>
                {
                    b.HasOne("BrazosApp.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Establishment");
                });

            modelBuilder.Entity("BrazosApp.Models.Notes", b =>
                {
                    b.HasOne("BrazosApp.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Establishment");
                });

            modelBuilder.Entity("BrazosApp.Models.RFOperationDetails", b =>
                {
                    b.HasOne("BrazosApp.Models.BusinessType", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.Establishment", "Establishment")
                        .WithMany()
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.OperationType", "OperationType")
                        .WithMany()
                        .HasForeignKey("OperationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Establishment");

                    b.Navigation("OperationType");
                });

            modelBuilder.Entity("BrazosApp.Models.TerritoryWiseInspectors", b =>
                {
                    b.HasOne("BrazosApp.Models.Users", "AssignedUser")
                        .WithMany()
                        .HasForeignKey("AssignedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.Territory", "Territory")
                        .WithMany("Inspectors")
                        .HasForeignKey("TerritoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrazosApp.Models.TerritoryAssignedType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedUser");

                    b.Navigation("Territory");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BrazosApp.Models.Users", b =>
                {
                    b.HasOne("BrazosApp.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BrazosApp.Models.Territory", b =>
                {
                    b.Navigation("Inspectors");
                });
#pragma warning restore 612, 618
        }
    }
}
